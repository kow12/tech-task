global
	log /dev/log	local0
	log /dev/log	local1 notice
 #  chroot /var/lib/haproxy
  user haproxy
  group haproxy

	# Default SSL material locations
	# ca-base /etc/ssl/certs
	# crt-base /etc/ssl/private

  # Default ciphers to use on SSL-enabled listening sockets.
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

  #userlist allowed_users
  #  user admin password $6$drArLRFgfl$jM9YP.aE0ycqjV9BS0Odk.AnE8oFZf18y0R2W92SLS.dFAASQ04Rwm5xZTfQ7PGZG1RZ5Nyymn7ZarzeQNKA2/

defaults
  log global
  mode http
  retries 3
  option  redispatch
  timeout connect 5000ms
  timeout client 50000ms
  timeout server 50000ms

frontend proxy
  mode http
  bind *:80
  bind *:443 ssl crt /etc/haproxy/certs/RootCA.pem
  # Setting that redirects clients that request over non-encrypted HTTP are redirected to the HTTPS version of the site.
  # http-request redirect scheme https unless { ssl_fc }
  acl passw path_sub /panw29
  use_backend web if passw
  default_backend noaccess

  #stats enable
  #stats refresh 30s
  #stats show-node
  #stats auth admin:password
  #stats uri /stats

backend web
  mode http
  # acl AuthOK http_auth(allowed_users)
  # http-request auth realm AuthRealm if !AuthOK
  # removes 'panw29' from uri 
  # reqrep ^([^\ ]*\ /)panw29[/]?(.*)     \1\2
  http-request replace-path /panw29/(.*) /\1
  # http-request set-path %[path,regsub(^/panw29/,/)]
  # setting causes HAProxy to send Layer 7 (HTTP) health checks instead of Layer 4 (TCP) checks to your backend servers.
  option httpchk HEAD /
  server web web:8888 check
  #server web 127.0.0.1:8888

backend noaccess
  mode http
  option httpchk HEAD /
  #errorfile 503 /etc/haproxy/no-access.htm
  server proxy proxy:8888 check
